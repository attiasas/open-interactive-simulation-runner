ext {
    mainClassName = "org.attias.open.interactive.simulation.desktop.DesktopLauncher"
    assetsDir = null
}

gradle.projectsEvaluated {
    def assetDirPath = System.getenv('OIS_ENV_PROJECT_ASSETS_DIR')
    if (assetDirPath) {
        def assetsDirFile = new File(assetDirPath)
        if (assetsDirFile.exists() && assetsDirFile.isDirectory()) {
            assetsDir = assetsDirFile
            sourceSets.main.resources.srcDirs = [assetsDirFile]
            println "Assets directory set to: ${assetsDirFile.absolutePath}"
        } else {
            println "Warning: The specified asset directory does not exist or is not a directory."
        }
    } else {
        println "Warning: Environment variable IOS_ENV_PROJECT_ASSETS_DIR not set."
    }
}

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    if (project.assetsDir != null) {
        println "workingDir set to Assets directory: ${project.assetsDir.absolutePath}"
        workingDir = project.assetsDir
    }
    ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    if (project.assetsDir != null) {
        println "workingDir set to Assets directory: ${project.assetsDir.absolutePath}"
        workingDir = project.assetsDir
    }
    ignoreExitValue = true
    debug = true
}

task dist(type: Jar) {
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

dist.dependsOn classes
